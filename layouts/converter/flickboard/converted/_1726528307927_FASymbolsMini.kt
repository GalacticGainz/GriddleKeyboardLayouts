package org.galacticware.griddle.keyboarddefinition.layouts.converter.flickboard.converted

//import org.galacticware.griddle.model.operation.shiftBoardLeft
//import org.galacticware.griddle.model.operation.shiftBoardRight
import org.galacticware.griddle.domain.operation.simpleInput
import org.galacticware.griddle.domain.gesture.GestureType.SWIPE_DOWN
import org.galacticware.griddle.domain.gesture.GestureType.SWIPE_DOWN_LEFT
import org.galacticware.griddle.domain.gesture.GestureType.SWIPE_DOWN_RIGHT
import org.galacticware.griddle.domain.gesture.GestureType.SWIPE_UP
import org.galacticware.griddle.domain.gesture.GestureType.SWIPE_UP_LEFT
import org.galacticware.griddle.domain.gesture.GestureType.SWIPE_UP_RIGHT
import org.galacticware.griddle.domain.griddlebutton.builder.GriddleButtonBuilder.Companion.makeClassicGestureButton
import org.galacticware.griddle.domain.keybinder.KeyBinder.Companion.gestureSet
import org.galacticware.griddle.domain.util.caseSensitive

/**
 * This file was generated by the FlickBoardConverter.kt script.
 * The original file should be kept in the same directory as this file.
 */



private val _FASymbolsMini_button0_0 = makeClassicGestureButton(
	rowStart = 0, colStart = 0, rowSpan = 1, colSpan = 1,
	gestureSet = mutableSetOf(
		gestureSet(SWIPE_UP_LEFT, simpleInput, threeChars = caseSensitive("+")),
		gestureSet(SWIPE_UP, simpleInput, threeChars = caseSensitive("*")),
		gestureSet(SWIPE_UP_RIGHT, simpleInput, threeChars = caseSensitive("=")),
		gestureSet(SWIPE_DOWN_LEFT, simpleInput, threeChars = caseSensitive("-")),
		gestureSet(SWIPE_DOWN, simpleInput, threeChars = caseSensitive("^")),
		gestureSet(SWIPE_DOWN_RIGHT, simpleInput, threeChars = caseSensitive("_")),
	)
)
private val _FASymbolsMini_button1_0 = makeClassicGestureButton(
	rowStart = 1, colStart = 0, rowSpan = 1, colSpan = 1,
	gestureSet = mutableSetOf(
		gestureSet(SWIPE_UP_LEFT, simpleInput, threeChars = caseSensitive("(")),
		gestureSet(SWIPE_UP_RIGHT, simpleInput, threeChars = caseSensitive(")")),
		gestureSet(SWIPE_DOWN_LEFT, simpleInput, threeChars = caseSensitive("#")),
		gestureSet(SWIPE_DOWN_RIGHT, simpleInput, threeChars = caseSensitive("$")),
	)
)
private val _FASymbolsMini_button2_0 = makeClassicGestureButton(
	rowStart = 2, colStart = 0, rowSpan = 1, colSpan = 1,
	gestureSet = mutableSetOf(
		gestureSet(SWIPE_UP_LEFT, simpleInput, threeChars = caseSensitive("&")),
		gestureSet(SWIPE_UP, simpleInput, threeChars = caseSensitive("@")),
		gestureSet(SWIPE_UP_RIGHT, simpleInput, threeChars = caseSensitive("~")),
		gestureSet(SWIPE_DOWN_LEFT, simpleInput, threeChars = caseSensitive("!")),
		gestureSet(SWIPE_DOWN, simpleInput, threeChars = caseSensitive("|")),
		gestureSet(SWIPE_DOWN_RIGHT, simpleInput, threeChars = caseSensitive("?")),
	)
)
private val _FASymbolsMini_button3_0 = makeClassicGestureButton(
	rowStart = 3, colStart = 0, rowSpan = 1, colSpan = 1,
	gestureSet = mutableSetOf(
		gestureSet(SWIPE_UP_LEFT, simpleInput, threeChars = caseSensitive("\"")),
		gestureSet(SWIPE_UP, simpleInput, threeChars = caseSensitive("'")),
		gestureSet(SWIPE_UP_RIGHT, simpleInput, threeChars = caseSensitive("؛")),
		gestureSet(SWIPE_DOWN_LEFT, simpleInput, threeChars = caseSensitive("،")),
		gestureSet(SWIPE_DOWN, simpleInput, threeChars = caseSensitive(".")),
		gestureSet(SWIPE_DOWN_RIGHT, simpleInput, threeChars = caseSensitive(":")),
	)
)